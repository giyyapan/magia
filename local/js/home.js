// Generated by CoffeeScript 1.6.2
(function() {
  var FirstFloor, Floor, HomeMenu, SecondFloor, SubMenu, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  SubMenu = (function(_super) {
    __extends(SubMenu, _super);

    function SubMenu(tpl, menu) {
      var _this = this;

      SubMenu.__super__.constructor.call(this, tpl);
      this.menu = menu;
      this.dom.onclick = function() {
        return _this.J.fadeOut("fast");
      };
    }

    SubMenu.prototype.setTitle = function(title) {
      return this.UI.title.J.text(title);
    };

    SubMenu.prototype.addBtn = function(name, btnCode) {
      var btn,
        _this = this;

      btn = new Widget(this.UI['sub-btn-tpl'].innerHTML);
      btn.UI.name.J.text(name);
      btn.appendTo(this.UI['sub-btn-box']);
      return btn.dom.onclick = function(evt) {
        evt.stopPropagation();
        return _this.menu.emit("activeSubMenu", btnCode);
      };
    };

    return SubMenu;

  })(Widget);

  HomeMenu = (function(_super) {
    __extends(HomeMenu, _super);

    function HomeMenu(floor) {
      HomeMenu.__super__.constructor.call(this, Res.tpls['home-menu']);
      this.floor = floor;
      this.subMenu = new SubMenu(this.UI['sub-menu-layer'], this);
    }

    HomeMenu.prototype.addFunctionBtn = function(name, x, y, callback) {
      var btn;

      btn = new Widget(this.UI['function-btn-tpl'].innerHTML);
      btn.appendTo(this.UI['function-btn-box']);
      btn.name = name;
      btn.J.css({
        left: "" + x + "px",
        top: "" + y + "px"
      });
      return btn.dom.onclick = function() {
        if (callback) {
          return callback();
        }
      };
    };

    HomeMenu.prototype.showSubMenu = function(title) {
      var index, name, _i, _len;

      this.off("activeSubMenu");
      this.subMenu.UI['sub-btn-box'].J.html("");
      this.subMenu.setTitle(title);
      for (index = _i = 0, _len = arguments.length; _i < _len; index = ++_i) {
        name = arguments[index];
        if (index > 0) {
          this.subMenu.addBtn(name, index);
        }
      }
      return this.subMenu.J.fadeIn("fast");
    };

    return HomeMenu;

  })(Menu);

  Floor = (function(_super) {
    __extends(Floor, _super);

    function Floor(home) {
      Floor.__super__.constructor.call(this, 0, 0);
      this.home = home;
      this.camera = new Camera();
      this.mainBg = null;
      this.drawQueueAdd(this.camera);
      this.layers = {};
      this.currentX = 0;
      this.initMenu();
      this.initLayers();
      this.initFunctionBtns();
    }

    Floor.prototype.initFunctionBtns = function() {};

    Floor.prototype.initLayers = function() {};

    Floor.prototype.initMenu = function() {
      var moveCallback, s,
        _this = this;

      s = Utils.getSize();
      this.menu = new HomeMenu;
      moveCallback = function() {
        var x;

        x = _this.currentX;
        delete _this.camera.lock;
        if (x === 0) {
          _this.menu.UI['move-left'].J.fadeOut(130);
        } else {
          _this.menu.UI['move-left'].J.fadeIn(130);
        }
        if (x === (_this.mainBg.width - s.width)) {
          return _this.menu.UI['move-right'].J.fadeOut(130);
        } else {
          return _this.menu.UI['move-right'].J.fadeIn(130);
        }
      };
      this.menu.UI['move-right'].onclick = function(evt) {
        var x;

        evt.stopPropagation();
        console.log("right");
        _this.camera.lock = true;
        _this.currentX += 400;
        if (_this.currentX > _this.mainBg.width - s.width) {
          _this.currentX = _this.mainBg.width - s.width;
        }
        x = _this.camera.getOffsetPositionX(_this.currentX, _this.mainBg);
        if (x > _this.mainBg.width) {
          x = _this.mainBg.width;
        }
        return _this.camera.animate({
          x: x
        }, "normal", function() {
          return moveCallback();
        });
      };
      return this.menu.UI['move-left'].onclick = function(evt) {
        var x;

        evt.stopPropagation();
        console.log("left");
        _this.camera.lock = true;
        _this.currentX -= 400;
        if (_this.currentX < 0) {
          _this.currentX = 0;
        }
        x = _this.camera.getOffsetPositionX(_this.currentX, _this.mainBg);
        return _this.camera.animate({
          x: x
        }, "normal", function() {
          return moveCallback();
        });
      };
    };

    return Floor;

  })(Layer);

  FirstFloor = (function(_super) {
    __extends(FirstFloor, _super);

    function FirstFloor() {
      FirstFloor.__super__.constructor.apply(this, arguments);
      this.currentX = 400;
      this.camera.x = this.camera.getOffsetPositionX(this.currentX, this.mainBg);
    }

    FirstFloor.prototype.initLayers = function() {
      var float, main;

      main = new Layer(Res.imgs.homeDownMain);
      float = new Layer(Res.imgs.homeDownFloat);
      this.mainBg = main;
      main.z = 300;
      float.z = 0;
      float.fixToBottom();
      float.x = 1000;
      this.camera.render(main, float);
      this.camera.defaultReferenceZ = main.z;
      return this.layers = {
        main: main,
        float: float
      };
    };

    FirstFloor.prototype.initFunctionBtns = function() {
      var _this = this;

      this.camera.render(this.menu.UI['function-btn-box']);
      this.menu.addFunctionBtn("上楼", 173, 20, function() {
        return console.log("上楼");
      });
      return this.menu.addFunctionBtn("猫", 1548, 425, function() {
        _this.menu.showSubMenu("猫", "调戏", "对话");
        return _this.menu.on("activeSubMenu", function(buttonCode) {
          switch (buttonCode) {
            case 1:
              return alert("调戏你妹啊！");
            case 2:
              return alert("喵喵喵");
          }
        });
      });
    };

    FirstFloor.prototype.show = function() {
      this.fadeIn("fast");
      return this.menu.show();
    };

    return FirstFloor;

  })(Floor);

  SecondFloor = (function(_super) {
    __extends(SecondFloor, _super);

    function SecondFloor() {
      _ref = SecondFloor.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    SecondFloor.prototype.initLayers = function() {
      var main;

      main = new Layer(Res.imgs.homeDown);
      this.mainBg = main;
      this.layers = {
        main: main
      };
      return this.camera.render(main);
    };

    SecondFloor.prototype.showWorkTable = function() {
      var worktable,
        _this = this;

      worktable = new Worktable(this.home);
      this.onshow = false;
      this.home.drawQueueAddAfter(worktable);
      return worktable.on("close", function() {
        _this.home.drawQueueRemove(worktable);
        _this.onshow = true;
        return _this.menu.show();
      });
    };

    return SecondFloor;

  })(Floor);

  window.Home = (function(_super) {
    __extends(Home, _super);

    function Home(game) {
      Home.__super__.constructor.call(this);
      this.game = game;
      this.firstFloor = new FirstFloor(this);
      this.secondFloor = new SecondFloor(this);
      this.drawQueueAdd(this.firstFloor, this.secondFloor);
      this.firstFloor.show();
    }

    Home.prototype.goUp = function() {};

    Home.prototype.goDown = function() {};

    Home.prototype.exit = function() {
      this.clearDrawQueue();
      return this.game.switchStage("worldMap");
    };

    return Home;

  })(Stage);

}).call(this);
