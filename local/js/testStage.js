// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.TestStage = (function(_super) {
    __extends(TestStage, _super);

    function TestStage(game) {
      var k, l1, l2, l3, l4, l5, l6,
        _this = this;
      TestStage.__super__.constructor.call(this, game);
      this.camera = new Camera();
      l1 = new Layer(Res.imgs.layer1);
      l1.z = 100000;
      l1.width = 2000;
      l1.x = -0;
      l2 = new Layer(Res.imgs.layer2);
      l2.z = 2000;
      l2.width = 5000;
      l3 = new Layer(Res.imgs.layer3);
      l3.z = 1000;
      l3.width = 5000;
      l4 = new Layer(Res.imgs.layer4);
      l4.z = 500;
      l4.width = 5000;
      l5 = new Layer(Res.imgs.layer5);
      l5.z = 200;
      l5.width = 5000;
      l6 = new Layer(Res.imgs.layer6);
      l6.z = 1;
      l6.width = 5000;
      this.menu = new Menu(Res.tpls['test-menu']);
      this.camera.render(l1, l2, l3, l4, l5, l6, this.menu);
      this.drawQueueAddAfter(this.camera, l1, l2, l3, l4, l5, l6, this.menu);
      this.menu.show();
      this.key = {};
      k = Suzaku.Key;
      window.onmousewheel = function(evt) {
        _this.camera.lens += evt.wheelDeltaY / 500;
        return console.log(_this.camera.lens);
      };
    }

    TestStage.prototype.tick = function() {
      if (Key.up) {
        if (Key.shift) {
          this.camera.lens += 0.01;
        } else {
          this.camera.y -= 20;
        }
      }
      if (Key.down) {
        if (Key.shift) {
          this.camera.lens -= 0.01;
        } else {
          this.camera.y += 20;
        }
      }
      if (Key.right) {
        this.camera.x += 20;
      }
      if (Key.left) {
        return this.camera.x -= 20;
      }
    };

    return TestStage;

  })(Stage);

}).call(this);
