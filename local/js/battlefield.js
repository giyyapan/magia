// Generated by CoffeeScript 1.6.3
(function() {
  var BattlefieldMenu, BattlefieldMonster, BattlefieldPlayer,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BattlefieldPlayer = (function(_super) {
    __extends(BattlefieldPlayer, _super);

    function BattlefieldPlayer(battlefield, x, y, originData) {
      BattlefieldPlayer.__super__.constructor.call(this, x, y, originData);
      this.battlefield = battlefield;
      this.transform.scaleX = -1;
    }

    BattlefieldPlayer.prototype.attack = function() {};

    BattlefieldPlayer.prototype.defense = function() {};

    BattlefieldPlayer.prototype.castSpell = function() {};

    BattlefieldPlayer.prototype.onattack = function() {};

    return BattlefieldPlayer;

  })(Sprite);

  BattlefieldMonster = (function(_super) {
    __extends(BattlefieldMonster, _super);

    function BattlefieldMonster(battlefield, x, y, originData) {
      BattlefieldMonster.__super__.constructor.call(this, x, y, originData);
      this.battlefield = battlefield;
    }

    BattlefieldMonster.prototype.draw = function(context) {
      return BattlefieldMonster.__super__.draw.call(this, context);
    };

    BattlefieldMonster.prototype.attack = function() {};

    BattlefieldMonster.prototype.onattack = function() {};

    return BattlefieldMonster;

  })(Sprite);

  BattlefieldMenu = (function(_super) {
    __extends(BattlefieldMenu, _super);

    function BattlefieldMenu(battlefield, tpl) {
      BattlefieldMenu.__super__.constructor.call(this, tpl);
      this.battlefield = battlefield;
      this.initBtns();
    }

    BattlefieldMenu.prototype.initBtns = function() {
      var _this = this;
      this.UI['attack-btn'].onclick = function(evt) {
        evt.stopPropagation();
        return _this.handlePlayerAttack();
      };
      this.UI['defense-btn'].onclick = function(evt) {
        evt.stopPropagation();
        return _this.handlePlayerDefense();
      };
      this.UI['magic-btn'].onclick = function(evt) {
        evt.stopPropagation();
        return _this.handlePlayerMagic();
      };
      return this.UI['escape-btn'].onclick = function(evt) {
        evt.stopPropagation();
        return _this.handlePlayerEscape();
      };
    };

    BattlefieldMenu.prototype.handlePlayerAttack = function() {
      return console.log("attack clicked");
    };

    BattlefieldMenu.prototype.handlePlayerDefense = function() {
      return console.log("defense clicked");
    };

    BattlefieldMenu.prototype.handlePlayerMagic = function() {
      return console.log("magic clicked");
    };

    BattlefieldMenu.prototype.handlePlayerEscape = function() {
      return console.log("escape clicked");
    };

    return BattlefieldMenu;

  })(Menu);

  window.Battlefield = (function(_super) {
    __extends(Battlefield, _super);

    function Battlefield(game, data) {
      Battlefield.__super__.constructor.call(this, game);
      this.game = game;
      this.data = data;
      this.db = game.db;
      this.camera = new Camera();
      this.drawQueueAddAfter(this.camera);
      this.initLayers();
      this.initSprites();
      this.setView("default");
    }

    Battlefield.prototype.initSprites = function() {
      var dx, dy, index, mdata, monster, name, startX, startY, x, y, _i, _len, _ref, _results;
      startY = 400;
      dy = 100;
      this.player = new BattlefieldPlayer(this, 200, startY, this.db.monsters.get("qq"));
      this.mainLayer.drawQueueAddAfter(this.player);
      this.monsters = [];
      startX = 1000;
      dx = 50;
      _ref = this.data.monsters;
      _results = [];
      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
        name = _ref[index];
        x = startX + index * dx;
        y = startY + index * dy;
        mdata = this.db.monsters.get(name);
        monster = new BattlefieldMonster(this, x, y, mdata);
        this.monsters.push(monster);
        _results.push(this.mainLayer.drawQueueAddAfter(monster));
      }
      return _results;
    };

    Battlefield.prototype.initLayers = function() {
      var bg, detail, img, imgName, name, value, _ref;
      this.bgs = [];
      this.mainLayer = null;
      _ref = this.data.bg;
      for (imgName in _ref) {
        detail = _ref[imgName];
        img = Res.imgs[imgName];
        bg = new Layer().setImg(img);
        for (name in detail) {
          value = detail[name];
          if (name === "main") {
            this.mainLayer = bg;
          }
          if (name === "fixToBottom") {
            bg.fixToBottom();
          } else {
            bg[name] = value;
          }
        }
        this.camera.render(bg);
      }
      if (!this.mainLayer) {
        this.mainLayer = this.bgs[0];
      }
      this.menu = new BattlefieldMenu(this, Res.tpls['battlefield-menu']);
      return this.drawQueueAddAfter(this.menu);
    };

    Battlefield.prototype.win = function() {
      this.emit("win");
      return console.log("win!!!");
    };

    Battlefield.prototype.lose = function() {
      this.emit("lose");
      return console.log("lose!!!");
    };

    Battlefield.prototype.show = function() {
      var _this = this;
      return Battlefield.__super__.show.call(this, function() {
        return _this.menu.show();
      });
    };

    Battlefield.prototype.tick = function(delayTime) {};

    Battlefield.prototype.setView = function(name) {};

    return Battlefield;

  })(Stage);

}).call(this);
