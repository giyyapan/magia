// Generated by CoffeeScript 1.6.3
(function() {
  var GuildMenu, MissionListItem,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  MissionListItem = (function(_super) {
    __extends(MissionListItem, _super);

    function MissionListItem(tpl, missionData, menu) {
      var _this = this;
      MissionListItem.__super__.constructor.call(this, tpl);
      this.menu = menu;
      this.missionData = missionData;
      this.mission = missionData;
      this.UI.name.J.text(missionData.dspName);
      this.dom.onclick = function() {
        _this.menu.detailsBox.showMissionDetails(_this);
        return _this.menu.detailsBox.on("activeMission", function(mission) {
          return _this.menu.initMissions();
        });
      };
      this.updateStatus();
    }

    MissionListItem.prototype.updateStatus = function() {
      var _this = this;
      switch (this.missionData.status) {
        case "current":
          this.type = "进行中";
          break;
        case "finished":
          this.type = "已结束";
          this.J.slideUp("fast", function() {
            try {
              return _this.remove();
            } catch (_error) {}
          });
          return;
        case "avail":
          this.type = "可接受";
          break;
        case "disable":
          this.type = "条件不足";
      }
      return this.UI.status.J.text(this.type);
    };

    return MissionListItem;

  })(Widget);

  GuildMenu = (function(_super) {
    __extends(GuildMenu, _super);

    function GuildMenu(guild) {
      var _this = this;
      this.guild = guild;
      this.game = guild.game;
      GuildMenu.__super__.constructor.call(this, Res.tpls['guild-menu']);
      this.detailsBox = new MissionDetailsBox(this.game).appendTo(this.UI['mission-box']);
      this.listItems = [];
      this.UI['service-mission'].onclick = function() {
        return _this.initMissions();
      };
      this.UI['service-conversation'].onclick = function() {
        return guild.conversation();
      };
      this.UI['exit'].onclick = function() {
        return guild.exit();
      };
      this.UI['end-mission'].onclick = function() {
        _this.guild.showServiceDialog();
        return _this.showServiceOptions();
      };
      this.show();
    }

    GuildMenu.prototype.removeListItem = function(item) {
      var i, newArr, _i, _len, _ref;
      newArr = [];
      _ref = this.listItems;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        i = _ref[_i];
        if (i !== item) {
          newArr.push(i);
        } else {
          i.J.slideUp("fast", function() {
            return $(this).remove();
          });
        }
      }
      return this.listItems = newArr;
    };

    GuildMenu.prototype.initMissions = function() {
      var a1, a2, mm;
      this.hideServiceOptions();
      this.guild.dialogBox.hide();
      this.detailsBox.J.hide();
      this.UI['mission-box'].J.fadeIn("fast");
      mm = this.guild.game.missionManager;
      a1 = mm.getMissions("current");
      a2 = mm.getMissions("avail");
      console.log(a1, a2);
      return this.addMissions(a1.concat(a2));
    };

    GuildMenu.prototype.showServiceOptions = function() {
      this.UI['mission-box'].J.fadeOut("fast");
      return this.UI['service-options'].J.fadeIn("fast");
    };

    GuildMenu.prototype.hideServiceOptions = function() {
      return this.UI['service-options'].J.fadeOut("fast");
    };

    GuildMenu.prototype.addMissions = function(missions) {
      var m, w, _i, _len, _results;
      console.log("guild add missions", missions);
      this.listItems = [];
      this.UI['mission-list'].J.html("");
      _results = [];
      for (_i = 0, _len = missions.length; _i < _len; _i++) {
        m = missions[_i];
        w = new MissionListItem(this.UI['mission-list-item-tpl'].innerHTML, m, this);
        w.appendTo(this.UI['mission-list']);
        _results.push(this.listItems.push(w));
      }
      return _results;
    };

    return GuildMenu;

  })(Menu);

  window.Guild = (function(_super) {
    __extends(Guild, _super);

    function Guild(game) {
      Stage.call(this, game);
      this.db = game.db;
      this.originData = this.db.shops.get("adventurerGuild");
      this.player = this.game.player;
      this.relationship = this.player.relationships[this.originData.npc];
      this.bg = new Layer(Res.imgs[this.originData.bg]);
      this.drawQueueAdd(this.bg);
      this.menu = new GuildMenu(this);
      this.initWelcomDialog();
    }

    return Guild;

  })(Shop);

}).call(this);
