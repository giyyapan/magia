// Generated by CoffeeScript 1.6.2
(function() {
  var ShopMenu,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ShopMenu = (function(_super) {
    __extends(ShopMenu, _super);

    function ShopMenu(shop) {
      var _this = this;

      this.shop = shop;
      ShopMenu.__super__.constructor.call(this, Res.tpls['shop-menu']);
      this.detailsBox = new ItemDetailsBox().appendTo(this.UI['right-section']);
      this.UI['service-traid'].onclick = function() {
        return _this.initTraid();
      };
      this.UI['service-conversation'].onclick = function() {
        return shop.conversation();
      };
      this.UI['exit'].onclick = function() {
        return shop.exit();
      };
      this.UI['player-buy-mode'].onclick = function() {
        return _this.playerBuyMode();
      };
      this.UI['player-sell-mode'].onclick = function() {
        return _this.playerSellMode();
      };
      this.UI['end-traid'].onclick = function() {
        _this.shop.showServiceDialog();
        return _this.showServiceOptions();
      };
      this.show();
    }

    ShopMenu.prototype.showServiceOptions = function() {
      this.UI['left-section'].J.fadeOut("fast");
      return this.UI['service-options'].J.fadeIn("fast");
    };

    ShopMenu.prototype.hideServiceOptions = function() {
      return this.UI['service-options'].J.fadeOut("fast");
    };

    ShopMenu.prototype.initTraid = function() {
      this.hideServiceOptions();
      this.shop.dialogBox.hide();
      this.updateMoney();
      return this.playerBuyMode();
    };

    ShopMenu.prototype.updateMoney = function() {
      return this.UI['player-money'].J.text(this.shop.player.money);
    };

    ShopMenu.prototype.playerSellMode = function() {
      this.UI['left-section'].J.fadeIn("fast");
      this.UI['player-sell-mode'].J.addClass("selected");
      return this.UI['player-buy-mode'].J.removeClass("selected");
    };

    ShopMenu.prototype.playerBuyMode = function() {
      this.UI['left-section'].J.fadeIn("fast");
      this.UI['player-buy-mode'].J.addClass("selected");
      return this.UI['player-sell-mode'].J.removeClass("selected");
    };

    return ShopMenu;

  })(Menu);

  window.Shop = (function(_super) {
    __extends(Shop, _super);

    function Shop(game, name) {
      Shop.__super__.constructor.call(this, game);
      this.db = game.db;
      this.originData = this.db.shops.get(name);
      this.player = this.game.player;
      this.relationship = this.player.relationships[this.originData.npc];
      this.bg = new Layer(Res.imgs[this.originData.bg]);
      this.drawQueueAdd(this.bg);
      this.menu = new ShopMenu(this);
      this.initWelcomDialog();
    }

    Shop.prototype.exit = function() {
      var _this = this;

      this.menu.hideServiceOptions();
      return this.dialogBox.display({
        text: this.originData.exitText,
        nostop: true
      }, function() {
        return _this.dialogBox.hide(function() {
          return _this.bg.fadeOut("fast", function() {
            return _this.game.switchStage("worldMap");
          });
        });
      });
    };

    Shop.prototype.conversation = function() {
      var text,
        _this = this;

      console.log("conversation");
      this.menu.hideServiceOptions();
      text = this.getDataByRelationship(this.originData.conversations);
      return this.dialogBox.display({
        text: text
      }, function() {
        _this.showServiceDialog();
        return _this.menu.showServiceOptions();
      });
    };

    Shop.prototype.getDataByRelationship = function(from) {
      var data, found, required;

      found = null;
      for (required in from) {
        data = from[required];
        if (parseInt(required) <= this.relationship) {
          found = data;
        } else {
          break;
        }
      }
      return found;
    };

    Shop.prototype.showServiceDialog = function() {
      return this.dialogBox.display({
        text: Utils.random(this.originData.waitText)
      });
    };

    Shop.prototype.initWelcomDialog = function() {
      var text,
        _this = this;

      this.dialogBox = new DialogBox();
      this.dialogBox.show();
      text = this.getDataByRelationship(this.originData.welcomeText);
      return this.dialogBox.display({
        text: text,
        speaker: this.originData.npcName,
        nostop: true
      }, function() {
        return _this.menu.showServiceOptions();
      });
    };

    return Shop;

  })(Stage);

}).call(this);
