// Generated by CoffeeScript 1.6.3
(function() {
  var DetailBox, ThingListItem,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Backpack = (function(_super) {
    __extends(Backpack, _super);

    function Backpack(game, type) {
      Backpack.__super__.constructor.call(this, Res.tpls["backpack"]);
      this.J.hide();
      this.player = game.player;
      this.currentTabName = "items";
      this.initThings();
      this.detailBox = new DetailBox(this.UI["item-detail-box-tpl"].J.html());
      this.detailBox.appendTo(this.UI['item-details-box-wrapper']);
      this.items = null;
      this.supplies = null;
      this.materials = null;
      this.equipments = null;
      this.initButtons();
    }

    Backpack.prototype.initButtons = function() {
      var self,
        _this = this;
      self = this;
      this.UI['exit-btn'].onclick = function() {
        return _this.emit("close");
      };
      return this.UI['type-switch'].J.find(".tab").on("click", function() {
        return self.switchTab($(this).attr("value"));
      });
    };

    Backpack.prototype.initThings = function(type) {
      var source, tabName, thing, _i, _len, _ref;
      if (type == null) {
        type = "gatherArea";
      }
      this.freeThings();
      tabName = this.currentTabName;
      if (type === "gatherArea") {
        source = this.player.backpack;
      }
      _ref = this.player.backpack;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        thing = _ref[_i];
        switch (thing.type) {
          case "item":
            this.items.push(thing);
            break;
          case "supplies":
            this.supplies.push(thing);
            break;
          case "material":
            this.materials.push(thing);
            break;
          case "equipment":
            this.equipments.push(thing);
        }
      }
      return this.switchTab(tabName);
    };

    Backpack.prototype.switchTab = function(tabName) {
      var arr, item, self, thing, _i, _len, _results;
      this.UI['item-list'].J.html("");
      self = this;
      this.UI['type-switch'].J.find(".tab").removeClass("active");
      switch (tabName) {
        case "items":
          arr = this.items;
          this.UI['item-tab'].J.addClass("active");
          break;
        case "supplies":
          arr = this.supplies;
          this.UI['supplies-tab'].J.addClass("active");
          break;
        case "materials":
          arr = this.materials;
          this.UI['materials-tab'].J.addClass("active");
          break;
        case "equipments":
          arr = this.equipments;
          this.UI['equipments-tab'].J.addClass("active");
          break;
        default:
          console.error("wrong type", tabName);
      }
      console.log(arr);
      if (!arr) {
        return;
      }
      _results = [];
      for (_i = 0, _len = arr.length; _i < _len; _i++) {
        thing = arr[_i];
        item = new ThingListItem(thing);
        item.appendTo(this.UI['item-list']);
        _results.push(item.on("select", function() {
          return self.selectThing(this);
        }));
      }
      return _results;
    };

    Backpack.prototype.selectThing = function(w) {
      this.J.find("thing-list-item").removeClass("active");
      w.J.addClass("active");
      return this.detailBox.showDetail(w.thing);
    };

    Backpack.prototype.freeThings = function() {
      Utils.free(this.items, this.supplies, this.materials, this.equipments);
      this.items = [];
      this.supplies = [];
      this.materials = [];
      return this.equipments = [];
    };

    Backpack.prototype.show = function(callback) {
      this.init();
      this.initThings();
      this.UILayer.fadeIn("fast", callback);
      return this.J.slideDown("fast", function() {
        if (callback) {
          return callback();
        }
      });
    };

    Backpack.prototype.hide = function(callback) {
      Backpack.__super__.hide.call(this);
      return this.J.slideUp("fast", function() {
        if (callback) {
          return callback();
        }
      });
    };

    return Backpack;

  })(Menu);

  ThingListItem = (function(_super) {
    __extends(ThingListItem, _super);

    function ThingListItem(thing) {
      var _this = this;
      ThingListItem.__super__.constructor.call(this, thing.originData, thing.number);
      this.thing = thing;
      this.dom.onclick = function() {
        return _this.emit("select");
      };
    }

    return ThingListItem;

  })(ThingListWidget);

  DetailBox = (function(_super) {
    __extends(DetailBox, _super);

    function DetailBox(tpl) {
      DetailBox.__super__.constructor.call(this, tpl);
    }

    DetailBox.prototype.showDetail = function(data) {
      this.UI.name.J.text(data.originData.name);
      return this.UI.description.J.text(data.originData.description);
    };

    return DetailBox;

  })(Suzaku.Widget);

}).call(this);
