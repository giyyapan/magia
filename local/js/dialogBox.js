// Generated by CoffeeScript 1.6.2
(function() {
  var DialogBox,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  DialogBox = (function(_super) {
    __extends(DialogBox, _super);

    function DialogBox() {
      var _this = this;

      DialogBox.__super__.constructor.call(this, Res.tpls['dialog-box']);
      this.displayInterval = null;
      this.displayLock = false;
      this.UI['content-wrapper'].onclick = function() {
        if (display) {
          return _this.endDisplay();
        } else {
          return _this.emit("next");
        }
      };
    }

    DialogBox.prototype.setCharacter = function(name, position) {
      return console.log("set character");
    };

    DialogBox.prototype.endDisplay = function() {
      window.clearInterval(this.displayInterval);
      this.displayLock = false;
      return this.UI.text.innerHTML = this.currentDisplayData.text;
    };

    DialogBox.prototype.display = function(data, callback) {
      var arr, currentDelay, delay, index,
        _this = this;

      if (this.displayLock) {
        return;
      }
      this.once("next", callback);
      this.displayLock = true;
      this.currentDisplayData = data;
      if (!data.text) {
        return;
      }
      arr = data.text.split("");
      index = 0;
      this.UI.text.innerHTML = "";
      delay = 0;
      currentDelay = 0;
      return this.displayInterval = window.setInterval((function() {
        var c;

        if (delay && currentDelay < delay) {
          return currentDelay += 1;
        }
        delay = 0;
        currentDelay = 0;
        if (index < arr.length) {
          index += 1;
          switch (arr[index]) {
            case "|":
              c = "</br>";
              break;
            case "!":
            case "！":
            case "。":
              delay = 3;
              c = arr[index];
              break;
            default:
              c = arr[index];
          }
          return _this.UI.text.innerHTML += arr[index];
        } else {
          return _this.endDisplay();
        }
      }), 50);
    };

    DialogBox.prototype.show = function(callback) {
      var _this = this;

      return this.UILayer.J.find("menu").fadeOut("fast", function() {
        _this.J.hide();
        _this.appendTo(_this.UILayer.dom);
        return _this.J.fadeIn("fast", function() {
          if (callback) {
            return callback();
          }
        });
      });
    };

    DialogBox.prototype.hide = function(callback) {
      var _this = this;

      return this.J.fadeOut("fast", function() {
        _this.UILayer.J.find("menu").fadeIn("fast");
        _this.remove();
        if (callback) {
          return callback();
        }
      });
    };

    return DialogBox;

  })(Menu);

}).call(this);
