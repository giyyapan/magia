// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Layer = (function(_super) {
    __extends(Layer, _super);

    function Layer(img) {
      var s, z;
      s = Utils.getSize();
      Layer.__super__.constructor.call(this, 0, 0, s.width, s.height);
      z = 100;
      this.setAnchor(0, 0);
      if (img instanceof Image) {
        this.setImg(img);
      }
    }

    Layer.prototype.fixToBottom = function() {
      var s;
      s = Utils.getSize();
      this.y = s.height - this.height;
      return this.fixedYCoordinates = true;
    };

    Layer.prototype.setImg = function(img) {
      Layer.__super__.setImg.call(this, img);
      this.width = img.width;
      this.height = img.height;
      return this;
    };

    return Layer;

  })(Drawable);

  window.Menu = (function(_super) {
    __extends(Menu, _super);

    function Menu(tpl) {
      Menu.__super__.constructor.call(this, tpl);
      this.isMenu = true;
      this.z = 0;
      this.UILayer = $(GameConfig.UILayerId);
    }

    Menu.prototype.init = function() {
      this.UILayer.hide();
      this.UILayer.html("");
      return this.appendTo(this.UILayer);
    };

    Menu.prototype.show = function(callback) {
      this.init();
      this.J.show();
      return this.UILayer.fadeIn("fast", callback);
    };

    Menu.prototype.hide = function(callback) {
      var _this = this;
      return this.UILayer.fadeOut("fast", function() {
        _this.J.hide();
        if (callback) {
          return callback();
        }
      });
    };

    Menu.prototype.onDraw = function() {
      return this.emit("render", this);
    };

    return Menu;

  })(Suzaku.Widget);

  window.Stage = (function(_super) {
    __extends(Stage, _super);

    function Stage(game) {
      this.game = game;
      Stage.__super__.constructor.call(this);
      this.setAnchor(0, 0);
    }

    Stage.prototype.show = function(callback) {
      return this.fadeIn("normal", callback);
    };

    Stage.prototype.hide = function(callback) {
      return this.fadeOut("normal", callback);
    };

    Stage.prototype.draw = function() {};

    Stage.prototype.tick = function() {};

    return Stage;

  })(Drawable);

  window.PopupBox = (function(_super) {
    __extends(PopupBox, _super);

    function PopupBox(tpl) {
      var self;
      PopupBox.__super__.constructor.call(this, tpl || Res.tpls['popup-box']);
      this.box = this.UI.box;
      this.J.hide();
      this.box.J.hide();
      self = this;
      if (this.UI['close-btn']) {
        this.UI['close-btn'].onclick = function() {
          return self.close();
        };
      }
      if (this.UI['accept-btn']) {
        this.UI['accept-btn'].onclick = function() {
          return self.accept();
        };
      }
    }

    PopupBox.prototype.show = function() {
      this.appendTo($("#UILayer"));
      this.J.fadeIn("fast");
      return this.box.J.slideDown("fast");
    };

    PopupBox.prototype.close = function() {
      var self;
      self = this;
      this.J.fadeOut("fast");
      return this.box.J.slideUp("fast", function() {
        self.remove();
        return self = null;
      });
    };

    PopupBox.prototype.accept = function() {
      if (window.GameConfig.debug) {
        return console.log(this, "accept");
      }
    };

    return PopupBox;

  })(Suzaku.Widget);

}).call(this);
